title:css++
date:2013/5/15

hover
----
我对:hover这几个伪类完全搞错了,以为可以.box :hover

其实是.box:hover中间不能有任何空格.(偶可能以前是懒正好没写)

这里就解释了那个问题,为什么less这些预编译都要这样写

    a {
      color: #222;
      &:hover {
        color: #333;
      }
    }

有这个&就告诉less,和上面选择器合并时不能有空格.

不过要加上$:hover非常复杂,我的词法中不认识这个规则.

要先添加&:hover, 再修改print()函数

为什么不直接用此法解析出 `&, :, hover` 呢?

原因很简单,这样的话还要区分 `.`, `#` 这些,给文法parser带来巨大压力.

最主要的原因就是我们不管选择器本身是什么,没有设置任何保留字

5-16
-------
一觉醒来发现写错了.

css中分号绝对是不能少的,因为有这种东西

    font : font-style || font-variant || font-weight || font-size || line-height || font-family 
    background: #00FF00 url(bgimage.gif) no-repeat fixed top;

这些..

    font:bold 18px "黑体";

这里就出问题了..引号的黑体, 以及多个属性值. 都是编译器的难点



first commit
----------

一直就很想写css预编译器,这跟(mvvm,html模板)并称前端3俗(我自己定的)

写css预编译是很有必要的,就好比html模板一样,很多人看着模板的文档很久依然不能自如的运用模板.

但只要你写过html模板,什么子模板嵌套,前后端同时用模板,这些都简单极了.

同样,mvvm框架也很多,学backbone或者Argular简直会让人崩溃.

与其直接学这种框架,不如自己先实现一个.

实现一个之后可以选择继续用自己的,也可以用大众的.但这时候用起那些高端框架,一下子就变得简单多了.

css预编译也是必要的,如果你说不必要,那你一定没写过超大量css.

css一个主题就要几千行代码,写3个主题直接上万行了.

但是用上css预编译器,少说省一半,最多只需写原来的十分之一.

而且维护性更高

使用less固然是绝佳的选择, 但为了论文有点技术性内容,不得不加入编译相关的东西.师兄表示编程上升到编译上就高端了..

非常不幸的是我一点都没觉得这个高端(是一天就写完的原因么..)

唯一值得一提的是我没有用[jison](http://zaach.github.io/jison/)

jison是js上的bison+flex合体.

由于师兄熟练使用bison+flex,一直希望我使用jison这样的工具,但我还是觉得手写parser最好.

还是说一下基本原理吧.

lex.js(词法)
---------

lex用js写有天然的优势,我模仿了visionmedia大大的这个写法

    return blank()||comment()||string()||...;

我返回一组数组`[type, value]`, 比如`['string', 'mycolor']`

parser.js(文法)
------------
由于是ll文法,加上了两个函数`next()`和`look()`

next是移出下一个,look是查看下一个.

看似简单,但是这个在ll文法中非常重要.

parser中必须使用函数互相调用,来达到互相递归,嵌套的功能.

compile.js(编译)
-----------
parser返回的是选择器和属性的信息.

我定义的格式是这样的

    [[selector1, selector2, ..., selectorN, key], value]

然后建立成一个hash数据结构.(难点,幸好我专门研究过类似问题)

最后使用print()函数遍历hash结构数据, 写成pretty后的css数据.

最后join('\n')就行啦.

我暂时只做了嵌套和变量,不过我认为嵌套是最复杂的功能(不用bison的话..), 所以估计差不多就能写完了.

期中检查吐槽
-------

结束前吐槽一下, 鄙人中期检查挂了..

我喜滋滋的上去讲了下http服务器的设计, api数据结构, 有点自豪的介绍model -> view的html模板, 以及mvvm的双向绑定等等.

结果旁听的老师以`只做了调研,没有实际运用`为由, 让我挂了中期检查.

除了我只有另一个女生挂了,那个女生就讲了下Android开发环境部署..

对于老师这样的评论, 我终于明白了`无力吐槽`. 不过我还是想说偶真的是实战派! 偶喜欢自己动手实现功能!






